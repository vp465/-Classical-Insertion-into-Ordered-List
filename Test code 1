open Microsoft.Quantum.Diagnostics;

operation InsertIntoSortedList(sortedList : Int[], element : Int) : (Int[], String) {
    mutable i = 0;
    mutable found = false;

    // Use repeat-until-success pattern
    repeat {
        if (i == Length(sortedList) or sortedList[i] > element) {
            set found = true;
        } else {
            set i = i + 1;
        }
    } until (found or i == Length(sortedList));

    // Insert the element into the list
    let updatedList = sortedList[0 .. i] + [element] + sortedList[i .. Length(sortedList) - 1];

    // Return the updated list and the message as a tuple
    let message = $"The list after insertion is: {updatedList}";
    DumpMachine(message);
    return (updatedList, message);
}

operation TestInsertIntoSortedList() : Unit {
    let sortedList = [1, 3, 5];
    let element = 2;
    let (updatedList, message) = InsertIntoSortedList(sortedList, element);
}
